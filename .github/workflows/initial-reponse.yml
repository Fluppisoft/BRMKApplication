name: Initial application response
on:
  issues:
    types: [opened]

jobs:
  process-application:
    runs-on: ubuntu-latest

    steps:
      # --------------------------------------------------------------
      # 1️⃣ Set up Node (we’ll run a short JS script)
      # --------------------------------------------------------------
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'

      - name: Install @actions/github helper
        run: npm i @actions/github@latest

      - name: Install @actions/core helper
        run: npm i @actions/core@latest

      # --------------------------------------------------------------
      # 2️⃣ Core logic
      # --------------------------------------------------------------
      - name: Comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          node <<'EOF'
          const core = require('@actions/core');
          const github = require('@actions/github');

          const token = process.env.GITHUB_TOKEN;
          const octokit = github.getOctokit(token);
          const ctx = github.context;

          // --------------------------------------------------------------
          // Information about the issue & its author
          // --------------------------------------------------------------
          const issueNumber = ctx.payload.issue.number;
          const repoOwner   = ctx.repo.owner;
          const repoName    = ctx.repo.repo;
          const applicant   = ctx.payload.issue.user.login;   // issue creator

          // --------------------------------------------------------------
          // Helper: post a comment on the issue
          // --------------------------------------------------------------
          async function comment(body) {
            await octokit.rest.issues.createComment({
              owner: repoOwner,
              repo: repoName,
              issue_number: issueNumber,
              body,
            });
          }

          // --------------------------------------------------------------
          // 3️⃣ Main flow
          // --------------------------------------------------------------
          (async () => {
            try {
              await comment(
                `Follow this guide to join the Epic Games organization on GitHub: https://www.unrealengine.com/en-US/ue-on-github. ` +
                `You have to accept the Unreal Engine EULA in order to use BRMK. Type '/next' if you have done so to continue with your application.`
              );
            } catch (err) {
              console.error(err);
              await comment(
                `⚠️ An error occurred while processing your request: ${err.message}`
              );
            }
          })();
          EOF
